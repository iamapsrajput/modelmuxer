version: '3.8'

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: modelmuxer-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - modelmuxer-network

  # ModelMuxer Application Service
  modelmuxer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: modelmuxer-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - modelmuxer_logs:/app/logs
    env_file:
      - .env
    environment:
      # Override specific environment variables for container networking
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./data/modelmuxer.db
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - modelmuxer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus for metrics collection (Optional - Enhanced Mode)
  prometheus:
    image: prom/prometheus:latest
    container_name: modelmuxer-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - modelmuxer-network
    profiles:
      - monitoring

  # Grafana for visualization (Optional - Enhanced Mode)
  grafana:
    image: grafana/grafana:latest
    container_name: modelmuxer-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - modelmuxer-network
    profiles:
      - monitoring

volumes:
  redis_data:
    driver: local
  modelmuxer_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  modelmuxer-network:
    driver: bridge
    name: modelmuxer-network
