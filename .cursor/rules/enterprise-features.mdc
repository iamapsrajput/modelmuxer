### Enterprise Features

#### Organization Management

- **Organization Manager**: [app/enterprise/organization_manager.py](mdc:app/enterprise/organization_manager.py)

  - Multi-tenant organization management
  - User provisioning and access control
  - Resource allocation and quotas
  - Billing and usage tracking

- **Enterprise Models**: [app/enterprise/models.py](mdc:app/enterprise/models.py)
  - Enterprise-specific data structures
  - Organization and user models
  - Billing and subscription models
  - Audit and compliance models

#### Classification and ML

- **Prompt Classifier**: [app/classification/prompt_classifier.py](mdc:app/classification/prompt_classifier.py)

  - Intelligent prompt analysis
  - Task type classification
  - Complexity assessment
  - Routing decision support

- **Embeddings System**: [app/classification/embeddings.py](mdc:app/classification/embeddings.py)
  - Semantic embeddings generation
  - Vector similarity calculations
  - Embedding caching and optimization
  - Model selection for embeddings

#### Policy and Compliance

- **Policy Rules**: [app/policy/rules.py](mdc:app/policy/rules.py)

  - Policy enforcement engine
  - Compliance rule checking
  - Safety and security policies
  - Custom policy definitions

- **Pattern Matching**: [app/policy/patterns/](mdc:app/policy/patterns/)
  - Jailbreak detection patterns
  - PII detection patterns
  - Custom pattern definitions
  - Pattern management utilities

### Enterprise Integration Guidelines

1. **Multi-tenancy**: Use organization context for all operations
2. **Resource Isolation**: Ensure proper isolation between tenants
3. **Audit Logging**: Log all enterprise operations for compliance
4. **Billing Integration**: Track usage and costs per organization
5. **Policy Enforcement**: Apply organization-specific policies
6. **Security**: Implement proper access controls and authentication

### Usage Patterns

```python
# Organization management
from app.enterprise.organization_manager import OrganizationManager
from app.enterprise.models import Organization, User

# Policy enforcement
from app.policy.rules import PolicyEngine
from app.classification.prompt_classifier import PromptClassifier

# Embeddings for semantic analysis
from app.classification.embeddings import EmbeddingsManager
```
