# ModelMuxer example environment configuration

# =============================================================================
# Routing Strategy Configuration
# =============================================================================
# ModelMuxer now uses direct provider connections as the primary routing method.
# This provides better control, lower latency, and more detailed error handling.

# =============================================================================
# Direct Provider Architecture
# =============================================================================
# ModelMuxer uses direct provider connections for optimal performance.
# Pricing is managed centrally in scripts/data/prices.json for consistency.
# Provider availability is determined by API key configuration below.

# --- Direct Provider Configuration (Primary) ---
# Direct provider API keys (recommended approach)
# At least one provider API key is required for routing to work
OPENAI_API_KEY=sk-your-openai-key-here
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
MISTRAL_API_KEY=your-mistral-key-here
GROQ_API_KEY=gsk_your-groq-key-here
GOOGLE_API_KEY=your-google-api-key-here
COHERE_API_KEY=your-cohere-key-here
TOGETHER_API_KEY=your-together-api-key-here

# Provider adapters enabled (default: true)
PROVIDER_ADAPTERS_ENABLED=true

# Note: Direct-only mode is always enabled in code (no configuration flag required)


# --- Observability ---
# ENABLE_TRACING=true
# ENABLE_METRICS=true
# OTEL_EXPORTER_OTLP_ENDPOINT=

# --- Server ---
# SERVER_HOST=0.0.0.0
# SERVER_PORT=8000
# SERVER_DEBUG=false

# --- Router Defaults ---
# ROUTER_DEFAULT_MODEL=gpt-3.5-turbo

# --- Intent Classifier (Phase 1) ---
ROUTER_INTENT_CLASSIFIER_ENABLED=true
INTENT_LOW_CONFIDENCE=0.4
INTENT_MIN_CONF_FOR_DIRECT=0.7

# --- Test Mode ---
# TEST_MODE=false
# =============================================================================
# ModelMuxer Environment Configuration
# =============================================================================
# Copy this file to .env and update with your actual values
# Never commit .env files with real credentials to version control

# ModelMuxer API Key for CLI
MODELMUXER_API_KEY=your-api-key-here

# =============================================================================
# Database Configuration
# =============================================================================
# SQLite (Development)
DATABASE_URL=sqlite:///./modelmuxer.db

# PostgreSQL (Production)
# DATABASE_URL=postgresql://username:SECURE_PASSWORD@localhost:5432/modelmuxer

# =============================================================================
# Redis Configuration
# =============================================================================
# Redis URL for caching and session storage
REDIS_URL=redis://localhost:6379
REDIS_DB=0
REDIS_TLS=false

# =============================================================================
# Server Configuration
# =============================================================================
HOST=0.0.0.0
PORT=8000
DEBUG=false

# =============================================================================
# Security Configuration
# =============================================================================
# API Key Authentication
API_KEY_HEADER=X-API-Key
ALLOWED_API_KEYS=sk-test-key-1,sk-test-key-2

# JWT Configuration
JWT_SECRET_KEY=REPLACE-WITH-SECURE-32-CHAR-SECRET-KEY-IN-PRODUCTION
JWT_ALGORITHM=HS256
JWT_EXPIRY=3600

# CLI Security
ALLOW_EXTERNAL_CLI_URLS=false

# =============================================================================
# Observability Configuration
# =============================================================================
# CORS Configuration (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,https://modelmuxer.com

# Logging
LOG_LEVEL=info
LOG_FORMAT=json
LOG_STRUCTURED=true

# Prometheus Metrics
PROMETHEUS_ENABLED=true

# OpenTelemetry
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# Sentry Error Reporting
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project

# =============================================================================
# Feature Flags
# =============================================================================
# ModelMuxer Mode: basic, enhanced, production
MODELMUXER_MODE=basic

# Core Features
AUTH_ENABLED=true
RATE_LIMIT_ENABLED=true
MONITORING_ENABLED=true
CACHE_ENABLED=true

# Provider Configuration (Direct connections only)
PROVIDER_ADAPTERS_ENABLED=true

# Routing Features
ENABLE_SEMANTIC_ROUTING=true
ENABLE_CASCADE_ROUTING=true

# =============================================================================
# Router Configuration
# =============================================================================
# Default Model and Parameters
DEFAULT_MODEL=gpt-4o-mini
MAX_TOKENS_DEFAULT=1000
TEMPERATURE_DEFAULT=0.7

# Routing Thresholds
CODE_DETECTION_THRESHOLD=0.2
COMPLEXITY_THRESHOLD=0.2
SIMPLE_QUERY_MAX_LENGTH=100

# =============================================================================
# Pricing and Cost Estimation Configuration
# =============================================================================
# Price table file path (JSON format with direct provider pricing data)
PRICE_TABLE_PATH=./scripts/data/prices.json

# Latency priors configuration (time window for measurements in seconds)
LATENCY_PRIORS_WINDOW_S=1800

# Default token counts for cost estimation when not provided
ESTIMATOR_DEFAULT_TOKENS_IN=400
ESTIMATOR_DEFAULT_TOKENS_OUT=300

# Note: Individual model pricing is now managed centrally in prices.json
# This provides better maintainability and consistency across deployments

# =============================================================================
# Budget Thresholds Configuration
# =============================================================================
# Maximum estimated USD cost per request before budget exceeded error
# Typical values: 0.05 (conservative), 0.08 (balanced), 0.15 (permissive)
MAX_ESTIMATED_USD_PER_REQUEST=0.08



# =============================================================================
# Legacy Configuration (for backward compatibility)
# =============================================================================
# These settings are maintained for compatibility with existing deployments
# but are now managed through the centralized settings system

# Rate Limiting (Legacy)
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000
RATE_LIMIT_BURST=10

# Monitoring (Legacy)
HEALTH_CHECK_ENABLED=true
METRICS_INTERVAL=60

# Enhanced Features (Legacy)
ENHANCED_FEATURES_AVAILABLE=true

# =============================================================================
# Policy Configuration
# =============================================================================
FEATURES_REDACT_PII=true
POLICY_ENABLE_JAILBREAK_DETECTION=true
POLICY_JAILBREAK_PATTERNS_PATH=app/policy/patterns/jailbreak.txt
# Example JSON maps for allow/deny (quoted strings):
POLICY_MODEL_ALLOW='{"tenant_a":["gpt-4o","claude-3-opus"]}'
POLICY_MODEL_DENY='{"tenant_a":["gpt-4o-mini"]}'
POLICY_REGION_ALLOW='{"tenant_a":["eu","us"]}'
POLICY_REGION_DENY='{"tenant_a":["cn","ru"]}'
